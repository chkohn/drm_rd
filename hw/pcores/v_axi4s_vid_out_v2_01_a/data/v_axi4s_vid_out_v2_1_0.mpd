#-- Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
#--
#-- This file contains confidential and proprietary information
#-- of Xilinx, Inc. and is protected under U.S. and
#-- international copyright and other intellectual property
#-- laws.
#--
#-- DISCLAIMER
#-- This disclaimer is not a license and does not grant any
#-- rights to the materials distributed herewith. Except as
#-- otherwise provided in a valid license issued to you by
#-- Xilinx, and to the maximum extent permitted by applicable
#-- law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
#-- WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
#-- AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
#-- BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
#-- INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
#-- (2) Xilinx shall not be liable (whether in contract or tort,
#-- including negligence, or under any other theory of
#-- liability) for any loss or damage of any kind or nature
#-- related to, arising under or in connection with these
#-- materials, including for any direct, or any indirect,
#-- special, incidental, or consequential loss or damage
#-- (including loss of data, profits, goodwill, or any type of
#-- loss or damage suffered as a result of any action brought
#-- by a third party) even if such damage or loss was
#-- reasonably foreseeable or Xilinx had been advised of the
#-- possibility of the same.
#--
#-- CRITICAL APPLICATIONS
#-- Xilinx products are not designed or intended to be fail-
#-- safe, or for use in any application requiring fail-safe
#-- performance, such as life-support or safety devices or
#-- systems, Class III medical devices, nuclear facilities,
#-- applications related to the deployment of airbags, or any
#-- other applications that could lead to death, personal
#-- injury, or severe property or environmental damage
#-- (individually and collectively, "Critical
#-- Applications"). Customer assumes the sole risk and
#-- liability of any use of Xilinx products in Critical
#-- Applications, subject only to applicable laws and
#-- regulations governing limitations on product liability.
#--
#-- THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
#-- PART OF THIS FILE AT ALL TIMES.

###################################################################
##
## Name     : v_axi4s_vid_out
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN v_axi4s_vid_out

## Peripheral Options
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION LAST_UPDATED = 14.2
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL
OPTION USAGE_LEVEL = BASE_USER
OPTION DATASHEET_NAME = pg044_v_axis_vid_out.pdf
OPTION DESC = AXI4-Stream to Video Out
OPTION LONG_DESC = Interfaces from Video over AXI-4 Stream input to Video outputs (Pixel Data;Syncs;Blanks;Data Enable)
OPTION IP_GROUP = Video and Image Processing:MICROBLAZE:ARM-A9
OPTION ARCH_SUPPORT_MAP = (spartan6t=PRODUCTION, spartan6=PRODUCTION, spartan6l=PRODUCTION, virtex6lx=PRODUCTION, virtex6sx=PRODUCTION, virtex6llx=PRODUCTION, virtex6lsx=PRODUCTION, virtex7=PRODUCTION, kintex7=PRODUCTION, artix7=PRE_PRODUCTION, zynq=PRE_PRODUCTION, virtex7l=PRODUCTION, kintex7l=PRODUCTION, artix7l=PRE_PRODUCTION)
OPTION HDL = MIXED


## Bus Interfaces
BUS_INTERFACE BUS = S_AXIS_VIDEO, BUS_STD = AXIS, BUS_TYPE = TARGET
BUS_INTERFACE BUS = VTIMING_IN, BUS_TYPE = TARGET, BUS_STD = VTIMING

## Generics for VHDL or Parameters for Verilog
PARAMETER C_S_AXIS_VIDEO_DATA_WIDTH = 8, DT = INTEGER, RANGE = (8,10,12,14,16)
PARAMETER C_S_AXIS_VIDEO_FORMAT = 2, DT = INTEGER, RANGE = (0:13), VALUES = (0= YUV_4:2:2 , 1=  YUV_4:4:4 , 2 =  RGB , 3= YUV_4:2:0 , 4= YUVA_4:2:2 , 5= YUVA_4:4:4 , 6= RGBA , 7= YUVA_4:2:0 , 8= YUVD_4:2:2 ,  9= YUVD_4:4:4 ,  10= RGBD , 11= SMPTE_352_YUV_4:2:0 , 12= Bayer_Sensor ,  13= Luma_Only )
PARAMETER VID_OUT_DATA_WIDTH = 24, DT = INTEGER, RANGE = (8:64), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_vid_out_data_width, ASSIGNMENT = UPDATE
PARAMETER C_S_AXIS_VIDEO_TDATA_WIDTH = 24, DT = INTEGER, RANGE = (8:64), IPLEVEL_UPDATE_VALUE_PROC = iplevel_update_s_axis_tdata_width, ASSIGNMENT = UPDATE
PARAMETER RAM_ADDR_BITS = 10, DT = INTEGER, RANGE = (5, 10,11,12,13,14), VALUES = (5= 32 , 10= 1024 , 11= 2048 , 12= 4096 , 13= 8192 )
PARAMETER HYSTERESIS_LEVEL = 12, DT = INTEGER, RANGE = (8:8176)
PARAMETER FILL_GUARDBAND = 2, DT = INTEGER
PARAMETER VTG_MASTER_SLAVE = 0, DT = INTEGER, RANGE = (0,1), VALUES = (0= Slave , 1= Master )
PARAMETER C_S_AXIS_VIDEO_PROTOCOL = XIL_AXI_STREAM_VID_DATA, DT = STRING, BUS = S_AXIS_VIDEO, ASSIGNMENT = CONSTANT, TYPE = NON_HDL

## Ports
PORT aclk = "", DIR = I, SIGIS = CLK, BUS = S_AXIS_VIDEO, ASSIGNMENT = REQUIRE
PORT rst = "", DIR = I, INITIALVAL = GND
PORT aresetn = "", DIR = I, SIGIS = RST, INITIALVAL = VCC
PORT aclken = "", DIR = I, INITIALVAL = VCC
PORT s_axis_video_tdata = tdata, DIR = I, BUS = S_AXIS_VIDEO, VEC = [(C_S_AXIS_VIDEO_TDATA_WIDTH-1):0]
PORT s_axis_video_tvalid = tvalid, DIR = I, BUS = S_AXIS_VIDEO
PORT s_axis_video_tready = tready, DIR = O, BUS = S_AXIS_VIDEO
PORT s_axis_video_tuser = tuser, DIR = I, BUS = S_AXIS_VIDEO
PORT s_axis_video_tlast = tlast, DIR = I, BUS = S_AXIS_VIDEO
PORT video_out_clk = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT video_clk = "", DIR = O
PORT video_de = "", DIR = O
PORT video_vsync = "", DIR = O
PORT video_hsync = "", DIR = O
PORT video_vblank = "", DIR = O
PORT video_hblank = "", DIR = O
PORT video_data = "", DIR = O, VEC = [(VID_OUT_DATA_WIDTH-1):0]
PORT vtg_vsync = vsync, DIR = I, BUS = VTIMING_IN
PORT vtg_hsync = hsync, DIR = I, BUS = VTIMING_IN
PORT vtg_vblank = vblank, DIR = I, BUS = VTIMING_IN
PORT vtg_hblank = hblank, DIR = I, BUS = VTIMING_IN
PORT vtg_act_vid = active_video, DIR = I, BUS = VTIMING_IN
PORT vtg_ce = "", DIR = O
PORT vtg_fsync = "", DIR = O
PORT locked = "", DIR = O
PORT wr_error = "", DIR = O
PORT empty = "", DIR = O

END
