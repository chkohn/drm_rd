// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2013.2
// Copyright (C) 2013 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sobel_filter,hls_ip_2013_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=6.666667,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.614000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=3,HLS_SYN_DSP=17,HLS_SYN_FF=1391,HLS_SYN_LUT=1552}" *)

module sobel_filter (
        src_axi_V_data_V_dout,
        src_axi_V_data_V_empty_n,
        src_axi_V_data_V_read,
        src_axi_V_keep_V_dout,
        src_axi_V_keep_V_empty_n,
        src_axi_V_keep_V_read,
        src_axi_V_strb_V_dout,
        src_axi_V_strb_V_empty_n,
        src_axi_V_strb_V_read,
        src_axi_V_user_V_dout,
        src_axi_V_user_V_empty_n,
        src_axi_V_user_V_read,
        src_axi_V_last_V_dout,
        src_axi_V_last_V_empty_n,
        src_axi_V_last_V_read,
        src_axi_V_id_V_dout,
        src_axi_V_id_V_empty_n,
        src_axi_V_id_V_read,
        src_axi_V_dest_V_dout,
        src_axi_V_dest_V_empty_n,
        src_axi_V_dest_V_read,
        dst_axi_V_data_V_din,
        dst_axi_V_data_V_full_n,
        dst_axi_V_data_V_write,
        dst_axi_V_keep_V_din,
        dst_axi_V_keep_V_full_n,
        dst_axi_V_keep_V_write,
        dst_axi_V_strb_V_din,
        dst_axi_V_strb_V_full_n,
        dst_axi_V_strb_V_write,
        dst_axi_V_user_V_din,
        dst_axi_V_user_V_full_n,
        dst_axi_V_user_V_write,
        dst_axi_V_last_V_din,
        dst_axi_V_last_V_full_n,
        dst_axi_V_last_V_write,
        dst_axi_V_id_V_din,
        dst_axi_V_id_V_full_n,
        dst_axi_V_id_V_write,
        dst_axi_V_dest_V_din,
        dst_axi_V_dest_V_full_n,
        dst_axi_V_dest_V_write,
        rows,
        cols,
        C_XR0C0,
        C_XR0C1,
        C_XR0C2,
        C_XR1C0,
        C_XR1C1,
        C_XR1C2,
        C_XR2C0,
        C_XR2C1,
        C_XR2C2,
        C_YR0C0,
        C_YR0C1,
        C_YR0C2,
        C_YR1C0,
        C_YR1C1,
        C_YR1C2,
        C_YR2C0,
        C_YR2C1,
        C_YR2C2,
        c_high_thesh,
        c_low_thresh,
        c_invert,
        ap_clk,
        ap_rst,
        ap_done,
        ap_start,
        ap_idle,
        ap_ready
);

input  [15:0] src_axi_V_data_V_dout;
input   src_axi_V_data_V_empty_n;
output   src_axi_V_data_V_read;
input  [1:0] src_axi_V_keep_V_dout;
input   src_axi_V_keep_V_empty_n;
output   src_axi_V_keep_V_read;
input  [1:0] src_axi_V_strb_V_dout;
input   src_axi_V_strb_V_empty_n;
output   src_axi_V_strb_V_read;
input  [0:0] src_axi_V_user_V_dout;
input   src_axi_V_user_V_empty_n;
output   src_axi_V_user_V_read;
input  [0:0] src_axi_V_last_V_dout;
input   src_axi_V_last_V_empty_n;
output   src_axi_V_last_V_read;
input  [0:0] src_axi_V_id_V_dout;
input   src_axi_V_id_V_empty_n;
output   src_axi_V_id_V_read;
input  [0:0] src_axi_V_dest_V_dout;
input   src_axi_V_dest_V_empty_n;
output   src_axi_V_dest_V_read;
output  [15:0] dst_axi_V_data_V_din;
input   dst_axi_V_data_V_full_n;
output   dst_axi_V_data_V_write;
output  [1:0] dst_axi_V_keep_V_din;
input   dst_axi_V_keep_V_full_n;
output   dst_axi_V_keep_V_write;
output  [1:0] dst_axi_V_strb_V_din;
input   dst_axi_V_strb_V_full_n;
output   dst_axi_V_strb_V_write;
output  [0:0] dst_axi_V_user_V_din;
input   dst_axi_V_user_V_full_n;
output   dst_axi_V_user_V_write;
output  [0:0] dst_axi_V_last_V_din;
input   dst_axi_V_last_V_full_n;
output   dst_axi_V_last_V_write;
output  [0:0] dst_axi_V_id_V_din;
input   dst_axi_V_id_V_full_n;
output   dst_axi_V_id_V_write;
output  [0:0] dst_axi_V_dest_V_din;
input   dst_axi_V_dest_V_full_n;
output   dst_axi_V_dest_V_write;
input  [31:0] rows;
input  [31:0] cols;
input  [31:0] C_XR0C0;
input  [31:0] C_XR0C1;
input  [31:0] C_XR0C2;
input  [31:0] C_XR1C0;
input  [31:0] C_XR1C1;
input  [31:0] C_XR1C2;
input  [31:0] C_XR2C0;
input  [31:0] C_XR2C1;
input  [31:0] C_XR2C2;
input  [31:0] C_YR0C0;
input  [31:0] C_YR0C1;
input  [31:0] C_YR0C2;
input  [31:0] C_YR1C0;
input  [31:0] C_YR1C1;
input  [31:0] C_YR1C2;
input  [31:0] C_YR2C0;
input  [31:0] C_YR2C1;
input  [31:0] C_YR2C2;
input  [31:0] c_high_thesh;
input  [31:0] c_low_thresh;
input  [31:0] c_invert;
input   ap_clk;
input   ap_rst;
output   ap_done;
input   ap_start;
output   ap_idle;
output   ap_ready;

reg ap_idle;
wire    init_U0_ap_start;
wire    init_U0_ap_done;
reg    init_U0_ap_continue;
wire    init_U0_ap_idle;
wire    init_U0_ap_ready;
wire   [31:0] init_U0_p_rows;
wire   [31:0] init_U0_p_cols;
wire   [11:0] init_U0_ap_return_0;
wire   [11:0] init_U0_ap_return_1;
reg    ap_chn_write_init_U0_src_rows_V;
wire    src_rows_V_full_n;
reg    ap_reg_ready_src_rows_V_full_n = 1'b0;
reg    ap_sig_ready_src_rows_V_full_n;
reg    ap_chn_write_init_U0_src_cols_V;
wire    src_cols_V_full_n;
reg    ap_reg_ready_src_cols_V_full_n = 1'b0;
reg    ap_sig_ready_src_cols_V_full_n;
wire    init_1_U0_ap_start;
wire    init_1_U0_ap_done;
reg    init_1_U0_ap_continue;
wire    init_1_U0_ap_idle;
wire    init_1_U0_ap_ready;
wire   [31:0] init_1_U0_p_rows;
wire   [31:0] init_1_U0_p_cols;
wire   [11:0] init_1_U0_ap_return_0;
wire   [11:0] init_1_U0_ap_return_1;
reg    ap_chn_write_init_1_U0_dst_rows_V;
wire    dst_rows_V_full_n;
reg    ap_reg_ready_dst_rows_V_full_n = 1'b0;
reg    ap_sig_ready_dst_rows_V_full_n;
reg    ap_chn_write_init_1_U0_dst_cols_V;
wire    dst_cols_V_full_n;
reg    ap_reg_ready_dst_cols_V_full_n = 1'b0;
reg    ap_sig_ready_dst_cols_V_full_n;
wire    AXIvideo2Mat_16_1080_1920_8_U0_ap_start;
wire    AXIvideo2Mat_16_1080_1920_8_U0_ap_done;
wire    AXIvideo2Mat_16_1080_1920_8_U0_ap_continue;
wire    AXIvideo2Mat_16_1080_1920_8_U0_ap_idle;
wire    AXIvideo2Mat_16_1080_1920_8_U0_ap_ready;
wire   [15:0] AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_data_V_dout;
wire    AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_data_V_empty_n;
wire    AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_data_V_read;
wire   [1:0] AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_dout;
wire    AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_empty_n;
wire    AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_read;
wire   [1:0] AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_dout;
wire    AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_empty_n;
wire    AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_read;
wire   [0:0] AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_user_V_dout;
wire    AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_user_V_empty_n;
wire    AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_user_V_read;
wire   [0:0] AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_last_V_dout;
wire    AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_last_V_empty_n;
wire    AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_last_V_read;
wire   [0:0] AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_id_V_dout;
wire    AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_id_V_empty_n;
wire    AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_id_V_read;
wire   [0:0] AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_dout;
wire    AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_empty_n;
wire    AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_read;
wire   [11:0] AXIvideo2Mat_16_1080_1920_8_U0_img_rows_V_read;
wire   [11:0] AXIvideo2Mat_16_1080_1920_8_U0_img_cols_V_read;
wire   [7:0] AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_0_V_din;
wire    AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_0_V_full_n;
wire    AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_0_V_write;
wire   [7:0] AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_1_V_din;
wire    AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_1_V_full_n;
wire    AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_1_V_write;
wire    sobel_filter_core_U0_ap_start;
wire    sobel_filter_core_U0_ap_done;
wire    sobel_filter_core_U0_ap_continue;
wire    sobel_filter_core_U0_ap_idle;
wire    sobel_filter_core_U0_ap_ready;
wire   [7:0] sobel_filter_core_U0_src_data_stream_0_V_dout;
wire    sobel_filter_core_U0_src_data_stream_0_V_empty_n;
wire    sobel_filter_core_U0_src_data_stream_0_V_read;
wire   [7:0] sobel_filter_core_U0_src_data_stream_1_V_dout;
wire    sobel_filter_core_U0_src_data_stream_1_V_empty_n;
wire    sobel_filter_core_U0_src_data_stream_1_V_read;
wire   [7:0] sobel_filter_core_U0_dst_data_stream_0_V_din;
wire    sobel_filter_core_U0_dst_data_stream_0_V_full_n;
wire    sobel_filter_core_U0_dst_data_stream_0_V_write;
wire   [7:0] sobel_filter_core_U0_dst_data_stream_1_V_din;
wire    sobel_filter_core_U0_dst_data_stream_1_V_full_n;
wire    sobel_filter_core_U0_dst_data_stream_1_V_write;
wire   [31:0] sobel_filter_core_U0_rows;
wire   [31:0] sobel_filter_core_U0_cols;
wire   [31:0] sobel_filter_core_U0_C_XR0C0;
wire   [31:0] sobel_filter_core_U0_C_XR0C1;
wire   [31:0] sobel_filter_core_U0_C_XR0C2;
wire   [31:0] sobel_filter_core_U0_C_XR1C0;
wire   [31:0] sobel_filter_core_U0_C_XR1C1;
wire   [31:0] sobel_filter_core_U0_C_XR1C2;
wire   [31:0] sobel_filter_core_U0_C_XR2C0;
wire   [31:0] sobel_filter_core_U0_C_XR2C1;
wire   [31:0] sobel_filter_core_U0_C_XR2C2;
wire   [31:0] sobel_filter_core_U0_C_YR0C0;
wire   [31:0] sobel_filter_core_U0_C_YR0C1;
wire   [31:0] sobel_filter_core_U0_C_YR0C2;
wire   [31:0] sobel_filter_core_U0_C_YR1C0;
wire   [31:0] sobel_filter_core_U0_C_YR1C1;
wire   [31:0] sobel_filter_core_U0_C_YR1C2;
wire   [31:0] sobel_filter_core_U0_C_YR2C0;
wire   [31:0] sobel_filter_core_U0_C_YR2C1;
wire   [31:0] sobel_filter_core_U0_c_high_thesh;
wire   [31:0] sobel_filter_core_U0_c_low_thresh;
wire   [31:0] sobel_filter_core_U0_c_invert;
wire    Mat2AXIvideo_16_1080_1920_8_U0_ap_start;
wire    Mat2AXIvideo_16_1080_1920_8_U0_ap_done;
wire    Mat2AXIvideo_16_1080_1920_8_U0_ap_continue;
wire    Mat2AXIvideo_16_1080_1920_8_U0_ap_idle;
wire    Mat2AXIvideo_16_1080_1920_8_U0_ap_ready;
wire   [11:0] Mat2AXIvideo_16_1080_1920_8_U0_img_rows_V_read;
wire   [11:0] Mat2AXIvideo_16_1080_1920_8_U0_img_cols_V_read;
wire   [7:0] Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_0_V_dout;
wire    Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_0_V_empty_n;
wire    Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_0_V_read;
wire   [7:0] Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_1_V_dout;
wire    Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_1_V_empty_n;
wire    Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_1_V_read;
wire   [15:0] Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_data_V_din;
wire    Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_data_V_full_n;
wire    Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_data_V_write;
wire   [1:0] Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_din;
wire    Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_full_n;
wire    Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_write;
wire   [1:0] Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_din;
wire    Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_full_n;
wire    Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_write;
wire   [0:0] Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_user_V_din;
wire    Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_user_V_full_n;
wire    Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_user_V_write;
wire   [0:0] Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_last_V_din;
wire    Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_last_V_full_n;
wire    Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_last_V_write;
wire   [0:0] Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_id_V_din;
wire    Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_id_V_full_n;
wire    Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_id_V_write;
wire   [0:0] Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_din;
wire    Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_full_n;
wire    Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_write;
wire    ap_sig_hs_continue;
wire    src_rows_V_ap_dummy_ce;
wire   [11:0] src_rows_V_din;
wire    src_rows_V_write;
wire   [11:0] src_rows_V_dout;
wire    src_rows_V_empty_n;
wire    src_rows_V_read;
wire    src_cols_V_ap_dummy_ce;
wire   [11:0] src_cols_V_din;
wire    src_cols_V_write;
wire   [11:0] src_cols_V_dout;
wire    src_cols_V_empty_n;
wire    src_cols_V_read;
wire    dst_rows_V_ap_dummy_ce;
wire   [11:0] dst_rows_V_din;
wire    dst_rows_V_write;
wire   [11:0] dst_rows_V_dout;
wire    dst_rows_V_empty_n;
wire    dst_rows_V_read;
wire    dst_cols_V_ap_dummy_ce;
wire   [11:0] dst_cols_V_din;
wire    dst_cols_V_write;
wire   [11:0] dst_cols_V_dout;
wire    dst_cols_V_empty_n;
wire    dst_cols_V_read;
wire    src_data_stream_0_V_ap_dummy_ce;
wire   [7:0] src_data_stream_0_V_din;
wire    src_data_stream_0_V_full_n;
wire    src_data_stream_0_V_write;
wire   [7:0] src_data_stream_0_V_dout;
wire    src_data_stream_0_V_empty_n;
wire    src_data_stream_0_V_read;
wire    src_data_stream_1_V_ap_dummy_ce;
wire   [7:0] src_data_stream_1_V_din;
wire    src_data_stream_1_V_full_n;
wire    src_data_stream_1_V_write;
wire   [7:0] src_data_stream_1_V_dout;
wire    src_data_stream_1_V_empty_n;
wire    src_data_stream_1_V_read;
wire    dst_data_stream_0_V_ap_dummy_ce;
wire   [7:0] dst_data_stream_0_V_din;
wire    dst_data_stream_0_V_full_n;
wire    dst_data_stream_0_V_write;
wire   [7:0] dst_data_stream_0_V_dout;
wire    dst_data_stream_0_V_empty_n;
wire    dst_data_stream_0_V_read;
wire    dst_data_stream_1_V_ap_dummy_ce;
wire   [7:0] dst_data_stream_1_V_din;
wire    dst_data_stream_1_V_full_n;
wire    dst_data_stream_1_V_write;
wire   [7:0] dst_data_stream_1_V_dout;
wire    dst_data_stream_1_V_empty_n;
wire    dst_data_stream_1_V_read;
reg    ap_reg_procdone_init_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_reg_procdone_init_1_U0 = 1'b0;
reg    ap_reg_procdone_AXIvideo2Mat_16_1080_1920_8_U0 = 1'b0;
reg    ap_reg_procdone_sobel_filter_core_U0 = 1'b0;
reg    ap_reg_procdone_Mat2AXIvideo_16_1080_1920_8_U0 = 1'b0;
wire    ap_CS;
reg    ap_sig_top_allready;
reg    ap_reg_ready_init_U0_ap_ready = 1'b0;
reg    ap_sig_ready_init_U0_ap_ready;
reg    ap_sig_start_in_init_U0_ap_start;
reg    ap_reg_ready_init_1_U0_ap_ready = 1'b0;
reg    ap_sig_ready_init_1_U0_ap_ready;
reg    ap_sig_start_in_init_1_U0_ap_start;
reg    ap_reg_ready_AXIvideo2Mat_16_1080_1920_8_U0_ap_ready = 1'b0;
reg    ap_sig_ready_AXIvideo2Mat_16_1080_1920_8_U0_ap_ready;
reg    ap_sig_start_in_AXIvideo2Mat_16_1080_1920_8_U0_ap_start;
reg    ap_reg_ready_sobel_filter_core_U0_ap_ready = 1'b0;
reg    ap_sig_ready_sobel_filter_core_U0_ap_ready;
reg    ap_sig_start_in_sobel_filter_core_U0_ap_start;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_true = 1'b1;


init init_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( init_U0_ap_start ),
    .ap_done( init_U0_ap_done ),
    .ap_continue( init_U0_ap_continue ),
    .ap_idle( init_U0_ap_idle ),
    .ap_ready( init_U0_ap_ready ),
    .p_rows( init_U0_p_rows ),
    .p_cols( init_U0_p_cols ),
    .ap_return_0( init_U0_ap_return_0 ),
    .ap_return_1( init_U0_ap_return_1 )
);

init_1 init_1_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( init_1_U0_ap_start ),
    .ap_done( init_1_U0_ap_done ),
    .ap_continue( init_1_U0_ap_continue ),
    .ap_idle( init_1_U0_ap_idle ),
    .ap_ready( init_1_U0_ap_ready ),
    .p_rows( init_1_U0_p_rows ),
    .p_cols( init_1_U0_p_cols ),
    .ap_return_0( init_1_U0_ap_return_0 ),
    .ap_return_1( init_1_U0_ap_return_1 )
);

AXIvideo2Mat_16_1080_1920_8_s AXIvideo2Mat_16_1080_1920_8_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( AXIvideo2Mat_16_1080_1920_8_U0_ap_start ),
    .ap_done( AXIvideo2Mat_16_1080_1920_8_U0_ap_done ),
    .ap_continue( AXIvideo2Mat_16_1080_1920_8_U0_ap_continue ),
    .ap_idle( AXIvideo2Mat_16_1080_1920_8_U0_ap_idle ),
    .ap_ready( AXIvideo2Mat_16_1080_1920_8_U0_ap_ready ),
    .AXI_video_strm_V_data_V_dout( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_data_V_dout ),
    .AXI_video_strm_V_data_V_empty_n( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_data_V_empty_n ),
    .AXI_video_strm_V_data_V_read( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_data_V_read ),
    .AXI_video_strm_V_keep_V_dout( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_dout ),
    .AXI_video_strm_V_keep_V_empty_n( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_empty_n ),
    .AXI_video_strm_V_keep_V_read( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_read ),
    .AXI_video_strm_V_strb_V_dout( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_dout ),
    .AXI_video_strm_V_strb_V_empty_n( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_empty_n ),
    .AXI_video_strm_V_strb_V_read( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_read ),
    .AXI_video_strm_V_user_V_dout( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_user_V_dout ),
    .AXI_video_strm_V_user_V_empty_n( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_user_V_empty_n ),
    .AXI_video_strm_V_user_V_read( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_user_V_read ),
    .AXI_video_strm_V_last_V_dout( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_last_V_dout ),
    .AXI_video_strm_V_last_V_empty_n( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_last_V_empty_n ),
    .AXI_video_strm_V_last_V_read( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_last_V_read ),
    .AXI_video_strm_V_id_V_dout( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_id_V_dout ),
    .AXI_video_strm_V_id_V_empty_n( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_id_V_empty_n ),
    .AXI_video_strm_V_id_V_read( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_id_V_read ),
    .AXI_video_strm_V_dest_V_dout( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_dout ),
    .AXI_video_strm_V_dest_V_empty_n( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_empty_n ),
    .AXI_video_strm_V_dest_V_read( AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_read ),
    .img_rows_V_read( AXIvideo2Mat_16_1080_1920_8_U0_img_rows_V_read ),
    .img_cols_V_read( AXIvideo2Mat_16_1080_1920_8_U0_img_cols_V_read ),
    .img_data_stream_0_V_din( AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_0_V_din ),
    .img_data_stream_0_V_full_n( AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_0_V_full_n ),
    .img_data_stream_0_V_write( AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_0_V_write ),
    .img_data_stream_1_V_din( AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_1_V_din ),
    .img_data_stream_1_V_full_n( AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_1_V_full_n ),
    .img_data_stream_1_V_write( AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_1_V_write )
);

sobel_filter_core sobel_filter_core_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( sobel_filter_core_U0_ap_start ),
    .ap_done( sobel_filter_core_U0_ap_done ),
    .ap_continue( sobel_filter_core_U0_ap_continue ),
    .ap_idle( sobel_filter_core_U0_ap_idle ),
    .ap_ready( sobel_filter_core_U0_ap_ready ),
    .src_data_stream_0_V_dout( sobel_filter_core_U0_src_data_stream_0_V_dout ),
    .src_data_stream_0_V_empty_n( sobel_filter_core_U0_src_data_stream_0_V_empty_n ),
    .src_data_stream_0_V_read( sobel_filter_core_U0_src_data_stream_0_V_read ),
    .src_data_stream_1_V_dout( sobel_filter_core_U0_src_data_stream_1_V_dout ),
    .src_data_stream_1_V_empty_n( sobel_filter_core_U0_src_data_stream_1_V_empty_n ),
    .src_data_stream_1_V_read( sobel_filter_core_U0_src_data_stream_1_V_read ),
    .dst_data_stream_0_V_din( sobel_filter_core_U0_dst_data_stream_0_V_din ),
    .dst_data_stream_0_V_full_n( sobel_filter_core_U0_dst_data_stream_0_V_full_n ),
    .dst_data_stream_0_V_write( sobel_filter_core_U0_dst_data_stream_0_V_write ),
    .dst_data_stream_1_V_din( sobel_filter_core_U0_dst_data_stream_1_V_din ),
    .dst_data_stream_1_V_full_n( sobel_filter_core_U0_dst_data_stream_1_V_full_n ),
    .dst_data_stream_1_V_write( sobel_filter_core_U0_dst_data_stream_1_V_write ),
    .rows( sobel_filter_core_U0_rows ),
    .cols( sobel_filter_core_U0_cols ),
    .C_XR0C0( sobel_filter_core_U0_C_XR0C0 ),
    .C_XR0C1( sobel_filter_core_U0_C_XR0C1 ),
    .C_XR0C2( sobel_filter_core_U0_C_XR0C2 ),
    .C_XR1C0( sobel_filter_core_U0_C_XR1C0 ),
    .C_XR1C1( sobel_filter_core_U0_C_XR1C1 ),
    .C_XR1C2( sobel_filter_core_U0_C_XR1C2 ),
    .C_XR2C0( sobel_filter_core_U0_C_XR2C0 ),
    .C_XR2C1( sobel_filter_core_U0_C_XR2C1 ),
    .C_XR2C2( sobel_filter_core_U0_C_XR2C2 ),
    .C_YR0C0( sobel_filter_core_U0_C_YR0C0 ),
    .C_YR0C1( sobel_filter_core_U0_C_YR0C1 ),
    .C_YR0C2( sobel_filter_core_U0_C_YR0C2 ),
    .C_YR1C0( sobel_filter_core_U0_C_YR1C0 ),
    .C_YR1C1( sobel_filter_core_U0_C_YR1C1 ),
    .C_YR1C2( sobel_filter_core_U0_C_YR1C2 ),
    .C_YR2C0( sobel_filter_core_U0_C_YR2C0 ),
    .C_YR2C1( sobel_filter_core_U0_C_YR2C1 ),
    .c_high_thesh( sobel_filter_core_U0_c_high_thesh ),
    .c_low_thresh( sobel_filter_core_U0_c_low_thresh ),
    .c_invert( sobel_filter_core_U0_c_invert )
);

Mat2AXIvideo_16_1080_1920_8_s Mat2AXIvideo_16_1080_1920_8_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( Mat2AXIvideo_16_1080_1920_8_U0_ap_start ),
    .ap_done( Mat2AXIvideo_16_1080_1920_8_U0_ap_done ),
    .ap_continue( Mat2AXIvideo_16_1080_1920_8_U0_ap_continue ),
    .ap_idle( Mat2AXIvideo_16_1080_1920_8_U0_ap_idle ),
    .ap_ready( Mat2AXIvideo_16_1080_1920_8_U0_ap_ready ),
    .img_rows_V_read( Mat2AXIvideo_16_1080_1920_8_U0_img_rows_V_read ),
    .img_cols_V_read( Mat2AXIvideo_16_1080_1920_8_U0_img_cols_V_read ),
    .img_data_stream_0_V_dout( Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_0_V_dout ),
    .img_data_stream_0_V_empty_n( Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_0_V_empty_n ),
    .img_data_stream_0_V_read( Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_0_V_read ),
    .img_data_stream_1_V_dout( Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_1_V_dout ),
    .img_data_stream_1_V_empty_n( Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_1_V_empty_n ),
    .img_data_stream_1_V_read( Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_1_V_read ),
    .AXI_video_strm_V_data_V_din( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_data_V_din ),
    .AXI_video_strm_V_data_V_full_n( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_data_V_full_n ),
    .AXI_video_strm_V_data_V_write( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_data_V_write ),
    .AXI_video_strm_V_keep_V_din( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_din ),
    .AXI_video_strm_V_keep_V_full_n( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_full_n ),
    .AXI_video_strm_V_keep_V_write( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_write ),
    .AXI_video_strm_V_strb_V_din( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_din ),
    .AXI_video_strm_V_strb_V_full_n( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_full_n ),
    .AXI_video_strm_V_strb_V_write( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_write ),
    .AXI_video_strm_V_user_V_din( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_user_V_din ),
    .AXI_video_strm_V_user_V_full_n( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_user_V_full_n ),
    .AXI_video_strm_V_user_V_write( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_user_V_write ),
    .AXI_video_strm_V_last_V_din( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_last_V_din ),
    .AXI_video_strm_V_last_V_full_n( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_last_V_full_n ),
    .AXI_video_strm_V_last_V_write( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_last_V_write ),
    .AXI_video_strm_V_id_V_din( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_id_V_din ),
    .AXI_video_strm_V_id_V_full_n( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_id_V_full_n ),
    .AXI_video_strm_V_id_V_write( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_id_V_write ),
    .AXI_video_strm_V_dest_V_din( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_din ),
    .AXI_video_strm_V_dest_V_full_n( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_full_n ),
    .AXI_video_strm_V_dest_V_write( Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_write )
);

FIFO_sobel_filter_src_rows_V src_rows_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( src_rows_V_ap_dummy_ce ),
    .if_write_ce( src_rows_V_ap_dummy_ce ),
    .if_din( src_rows_V_din ),
    .if_full_n( src_rows_V_full_n ),
    .if_write( src_rows_V_write ),
    .if_dout( src_rows_V_dout ),
    .if_empty_n( src_rows_V_empty_n ),
    .if_read( src_rows_V_read )
);

FIFO_sobel_filter_src_cols_V src_cols_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( src_cols_V_ap_dummy_ce ),
    .if_write_ce( src_cols_V_ap_dummy_ce ),
    .if_din( src_cols_V_din ),
    .if_full_n( src_cols_V_full_n ),
    .if_write( src_cols_V_write ),
    .if_dout( src_cols_V_dout ),
    .if_empty_n( src_cols_V_empty_n ),
    .if_read( src_cols_V_read )
);

FIFO_sobel_filter_dst_rows_V dst_rows_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( dst_rows_V_ap_dummy_ce ),
    .if_write_ce( dst_rows_V_ap_dummy_ce ),
    .if_din( dst_rows_V_din ),
    .if_full_n( dst_rows_V_full_n ),
    .if_write( dst_rows_V_write ),
    .if_dout( dst_rows_V_dout ),
    .if_empty_n( dst_rows_V_empty_n ),
    .if_read( dst_rows_V_read )
);

FIFO_sobel_filter_dst_cols_V dst_cols_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( dst_cols_V_ap_dummy_ce ),
    .if_write_ce( dst_cols_V_ap_dummy_ce ),
    .if_din( dst_cols_V_din ),
    .if_full_n( dst_cols_V_full_n ),
    .if_write( dst_cols_V_write ),
    .if_dout( dst_cols_V_dout ),
    .if_empty_n( dst_cols_V_empty_n ),
    .if_read( dst_cols_V_read )
);

FIFO_sobel_filter_src_data_stream_0_V src_data_stream_0_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( src_data_stream_0_V_ap_dummy_ce ),
    .if_write_ce( src_data_stream_0_V_ap_dummy_ce ),
    .if_din( src_data_stream_0_V_din ),
    .if_full_n( src_data_stream_0_V_full_n ),
    .if_write( src_data_stream_0_V_write ),
    .if_dout( src_data_stream_0_V_dout ),
    .if_empty_n( src_data_stream_0_V_empty_n ),
    .if_read( src_data_stream_0_V_read )
);

FIFO_sobel_filter_src_data_stream_1_V src_data_stream_1_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( src_data_stream_1_V_ap_dummy_ce ),
    .if_write_ce( src_data_stream_1_V_ap_dummy_ce ),
    .if_din( src_data_stream_1_V_din ),
    .if_full_n( src_data_stream_1_V_full_n ),
    .if_write( src_data_stream_1_V_write ),
    .if_dout( src_data_stream_1_V_dout ),
    .if_empty_n( src_data_stream_1_V_empty_n ),
    .if_read( src_data_stream_1_V_read )
);

FIFO_sobel_filter_dst_data_stream_0_V dst_data_stream_0_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( dst_data_stream_0_V_ap_dummy_ce ),
    .if_write_ce( dst_data_stream_0_V_ap_dummy_ce ),
    .if_din( dst_data_stream_0_V_din ),
    .if_full_n( dst_data_stream_0_V_full_n ),
    .if_write( dst_data_stream_0_V_write ),
    .if_dout( dst_data_stream_0_V_dout ),
    .if_empty_n( dst_data_stream_0_V_empty_n ),
    .if_read( dst_data_stream_0_V_read )
);

FIFO_sobel_filter_dst_data_stream_1_V dst_data_stream_1_V(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .if_read_ce( dst_data_stream_1_V_ap_dummy_ce ),
    .if_write_ce( dst_data_stream_1_V_ap_dummy_ce ),
    .if_din( dst_data_stream_1_V_din ),
    .if_full_n( dst_data_stream_1_V_full_n ),
    .if_write( dst_data_stream_1_V_write ),
    .if_dout( dst_data_stream_1_V_dout ),
    .if_empty_n( dst_data_stream_1_V_empty_n ),
    .if_read( dst_data_stream_1_V_read )
);



/// ap_reg_procdone_AXIvideo2Mat_16_1080_1920_8_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_AXIvideo2Mat_16_1080_1920_8_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_AXIvideo2Mat_16_1080_1920_8_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_AXIvideo2Mat_16_1080_1920_8_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == AXIvideo2Mat_16_1080_1920_8_U0_ap_done)) begin
            ap_reg_procdone_AXIvideo2Mat_16_1080_1920_8_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_Mat2AXIvideo_16_1080_1920_8_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_Mat2AXIvideo_16_1080_1920_8_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_Mat2AXIvideo_16_1080_1920_8_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_Mat2AXIvideo_16_1080_1920_8_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == Mat2AXIvideo_16_1080_1920_8_U0_ap_done)) begin
            ap_reg_procdone_Mat2AXIvideo_16_1080_1920_8_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_init_1_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_init_1_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_init_1_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_init_1_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == init_1_U0_ap_done)) begin
            ap_reg_procdone_init_1_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_init_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_init_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_init_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_init_U0 <= ap_const_logic_0;
        end else if ((init_U0_ap_done == ap_const_logic_1)) begin
            ap_reg_procdone_init_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_sobel_filter_core_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_sobel_filter_core_U0
    if (ap_rst == 1'b1) begin
        ap_reg_procdone_sobel_filter_core_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_sobel_filter_core_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == sobel_filter_core_U0_ap_done)) begin
            ap_reg_procdone_sobel_filter_core_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_AXIvideo2Mat_16_1080_1920_8_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_AXIvideo2Mat_16_1080_1920_8_U0_ap_ready
    if (ap_rst == 1'b1) begin
        ap_reg_ready_AXIvideo2Mat_16_1080_1920_8_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_AXIvideo2Mat_16_1080_1920_8_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == AXIvideo2Mat_16_1080_1920_8_U0_ap_ready)) begin
            ap_reg_ready_AXIvideo2Mat_16_1080_1920_8_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_dst_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_dst_cols_V_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_dst_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == init_1_U0_ap_done) & (ap_const_logic_1 == init_1_U0_ap_continue))) begin
            ap_reg_ready_dst_cols_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == init_1_U0_ap_done) & (ap_const_logic_1 == dst_cols_V_full_n))) begin
            ap_reg_ready_dst_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_dst_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_dst_rows_V_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_dst_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == init_1_U0_ap_done) & (ap_const_logic_1 == init_1_U0_ap_continue))) begin
            ap_reg_ready_dst_rows_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == init_1_U0_ap_done) & (ap_const_logic_1 == dst_rows_V_full_n))) begin
            ap_reg_ready_dst_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_init_1_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_init_1_U0_ap_ready
    if (ap_rst == 1'b1) begin
        ap_reg_ready_init_1_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_init_1_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == init_1_U0_ap_ready)) begin
            ap_reg_ready_init_1_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_init_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_init_U0_ap_ready
    if (ap_rst == 1'b1) begin
        ap_reg_ready_init_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_init_U0_ap_ready <= ap_const_logic_0;
        end else if ((init_U0_ap_ready == ap_const_logic_1)) begin
            ap_reg_ready_init_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_sobel_filter_core_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_sobel_filter_core_U0_ap_ready
    if (ap_rst == 1'b1) begin
        ap_reg_ready_sobel_filter_core_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_sobel_filter_core_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == sobel_filter_core_U0_ap_ready)) begin
            ap_reg_ready_sobel_filter_core_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_src_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_src_cols_V_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_src_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((init_U0_ap_done == ap_const_logic_1) & (init_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_src_cols_V_full_n <= ap_const_logic_0;
        end else if (((init_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == src_cols_V_full_n))) begin
            ap_reg_ready_src_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_src_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_src_rows_V_full_n
    if (ap_rst == 1'b1) begin
        ap_reg_ready_src_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((init_U0_ap_done == ap_const_logic_1) & (init_U0_ap_continue == ap_const_logic_1))) begin
            ap_reg_ready_src_rows_V_full_n <= ap_const_logic_0;
        end else if (((init_U0_ap_done == ap_const_logic_1) & (ap_const_logic_1 == src_rows_V_full_n))) begin
            ap_reg_ready_src_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_chn_write_init_1_U0_dst_cols_V assign process. ///
always @ (init_1_U0_ap_done or ap_reg_ready_dst_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_dst_cols_V_full_n)) begin
        ap_chn_write_init_1_U0_dst_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_init_1_U0_dst_cols_V = init_1_U0_ap_done;
    end
end

/// ap_chn_write_init_1_U0_dst_rows_V assign process. ///
always @ (init_1_U0_ap_done or ap_reg_ready_dst_rows_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_dst_rows_V_full_n)) begin
        ap_chn_write_init_1_U0_dst_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_init_1_U0_dst_rows_V = init_1_U0_ap_done;
    end
end

/// ap_chn_write_init_U0_src_cols_V assign process. ///
always @ (init_U0_ap_done or ap_reg_ready_src_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_src_cols_V_full_n)) begin
        ap_chn_write_init_U0_src_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_init_U0_src_cols_V = init_U0_ap_done;
    end
end

/// ap_chn_write_init_U0_src_rows_V assign process. ///
always @ (init_U0_ap_done or ap_reg_ready_src_rows_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_src_rows_V_full_n)) begin
        ap_chn_write_init_U0_src_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_init_U0_src_rows_V = init_U0_ap_done;
    end
end

/// ap_idle assign process. ///
always @ (init_U0_ap_idle or init_1_U0_ap_idle or AXIvideo2Mat_16_1080_1920_8_U0_ap_idle or sobel_filter_core_U0_ap_idle or Mat2AXIvideo_16_1080_1920_8_U0_ap_idle or src_rows_V_empty_n or src_cols_V_empty_n or dst_rows_V_empty_n or dst_cols_V_empty_n)
begin
    if (((init_U0_ap_idle == ap_const_logic_1) & (ap_const_logic_1 == init_1_U0_ap_idle) & (ap_const_logic_1 == AXIvideo2Mat_16_1080_1920_8_U0_ap_idle) & (ap_const_logic_1 == sobel_filter_core_U0_ap_idle) & (ap_const_logic_1 == Mat2AXIvideo_16_1080_1920_8_U0_ap_idle) & (ap_const_logic_0 == src_rows_V_empty_n) & (ap_const_logic_0 == src_cols_V_empty_n) & (ap_const_logic_0 == dst_rows_V_empty_n) & (ap_const_logic_0 == dst_cols_V_empty_n))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_sig_hs_done assign process. ///
always @ (Mat2AXIvideo_16_1080_1920_8_U0_ap_done or ap_reg_procdone_Mat2AXIvideo_16_1080_1920_8_U0)
begin
    if (((ap_const_logic_1 == Mat2AXIvideo_16_1080_1920_8_U0_ap_done) | (ap_const_logic_1 == ap_reg_procdone_Mat2AXIvideo_16_1080_1920_8_U0))) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end

/// ap_sig_ready_AXIvideo2Mat_16_1080_1920_8_U0_ap_ready assign process. ///
always @ (AXIvideo2Mat_16_1080_1920_8_U0_ap_ready or ap_reg_ready_AXIvideo2Mat_16_1080_1920_8_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_AXIvideo2Mat_16_1080_1920_8_U0_ap_ready)) begin
        ap_sig_ready_AXIvideo2Mat_16_1080_1920_8_U0_ap_ready = AXIvideo2Mat_16_1080_1920_8_U0_ap_ready;
    end else begin
        ap_sig_ready_AXIvideo2Mat_16_1080_1920_8_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_ready_dst_cols_V_full_n assign process. ///
always @ (dst_cols_V_full_n or ap_reg_ready_dst_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_dst_cols_V_full_n)) begin
        ap_sig_ready_dst_cols_V_full_n = dst_cols_V_full_n;
    end else begin
        ap_sig_ready_dst_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_dst_rows_V_full_n assign process. ///
always @ (dst_rows_V_full_n or ap_reg_ready_dst_rows_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_dst_rows_V_full_n)) begin
        ap_sig_ready_dst_rows_V_full_n = dst_rows_V_full_n;
    end else begin
        ap_sig_ready_dst_rows_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_init_1_U0_ap_ready assign process. ///
always @ (init_1_U0_ap_ready or ap_reg_ready_init_1_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_init_1_U0_ap_ready)) begin
        ap_sig_ready_init_1_U0_ap_ready = init_1_U0_ap_ready;
    end else begin
        ap_sig_ready_init_1_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_ready_init_U0_ap_ready assign process. ///
always @ (init_U0_ap_ready or ap_reg_ready_init_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_init_U0_ap_ready)) begin
        ap_sig_ready_init_U0_ap_ready = init_U0_ap_ready;
    end else begin
        ap_sig_ready_init_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_ready_sobel_filter_core_U0_ap_ready assign process. ///
always @ (sobel_filter_core_U0_ap_ready or ap_reg_ready_sobel_filter_core_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_sobel_filter_core_U0_ap_ready)) begin
        ap_sig_ready_sobel_filter_core_U0_ap_ready = sobel_filter_core_U0_ap_ready;
    end else begin
        ap_sig_ready_sobel_filter_core_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_ready_src_cols_V_full_n assign process. ///
always @ (src_cols_V_full_n or ap_reg_ready_src_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_src_cols_V_full_n)) begin
        ap_sig_ready_src_cols_V_full_n = src_cols_V_full_n;
    end else begin
        ap_sig_ready_src_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_src_rows_V_full_n assign process. ///
always @ (src_rows_V_full_n or ap_reg_ready_src_rows_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_src_rows_V_full_n)) begin
        ap_sig_ready_src_rows_V_full_n = src_rows_V_full_n;
    end else begin
        ap_sig_ready_src_rows_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_start_in_AXIvideo2Mat_16_1080_1920_8_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_AXIvideo2Mat_16_1080_1920_8_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_start) & (ap_const_logic_0 == ap_reg_ready_AXIvideo2Mat_16_1080_1920_8_U0_ap_ready))) begin
        ap_sig_start_in_AXIvideo2Mat_16_1080_1920_8_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_AXIvideo2Mat_16_1080_1920_8_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_start_in_init_1_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_init_1_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_start) & (ap_const_logic_0 == ap_reg_ready_init_1_U0_ap_ready))) begin
        ap_sig_start_in_init_1_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_init_1_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_start_in_init_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_init_U0_ap_ready)
begin
    if (((ap_const_logic_0 == ap_reg_ready_init_U0_ap_ready) & (ap_const_logic_1 == ap_start))) begin
        ap_sig_start_in_init_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_init_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_start_in_sobel_filter_core_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_sobel_filter_core_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_start) & (ap_const_logic_0 == ap_reg_ready_sobel_filter_core_U0_ap_ready))) begin
        ap_sig_start_in_sobel_filter_core_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_sobel_filter_core_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_top_allready assign process. ///
always @ (ap_sig_ready_init_U0_ap_ready or ap_sig_ready_init_1_U0_ap_ready or ap_sig_ready_AXIvideo2Mat_16_1080_1920_8_U0_ap_ready or ap_sig_ready_sobel_filter_core_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_sig_ready_init_U0_ap_ready) & (ap_const_logic_1 == ap_sig_ready_init_1_U0_ap_ready) & (ap_const_logic_1 == ap_sig_ready_AXIvideo2Mat_16_1080_1920_8_U0_ap_ready) & (ap_const_logic_1 == ap_sig_ready_sobel_filter_core_U0_ap_ready))) begin
        ap_sig_top_allready = ap_const_logic_1;
    end else begin
        ap_sig_top_allready = ap_const_logic_0;
    end
end

/// init_1_U0_ap_continue assign process. ///
always @ (ap_sig_ready_dst_rows_V_full_n or ap_sig_ready_dst_cols_V_full_n)
begin
    if (((ap_const_logic_1 == ap_sig_ready_dst_rows_V_full_n) & (ap_const_logic_1 == ap_sig_ready_dst_cols_V_full_n))) begin
        init_1_U0_ap_continue = ap_const_logic_1;
    end else begin
        init_1_U0_ap_continue = ap_const_logic_0;
    end
end

/// init_U0_ap_continue assign process. ///
always @ (ap_sig_ready_src_rows_V_full_n or ap_sig_ready_src_cols_V_full_n)
begin
    if (((ap_const_logic_1 == ap_sig_ready_src_rows_V_full_n) & (ap_const_logic_1 == ap_sig_ready_src_cols_V_full_n))) begin
        init_U0_ap_continue = ap_const_logic_1;
    end else begin
        init_U0_ap_continue = ap_const_logic_0;
    end
end
assign AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_data_V_dout = src_axi_V_data_V_dout;
assign AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_data_V_empty_n = src_axi_V_data_V_empty_n;
assign AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_dout = src_axi_V_dest_V_dout;
assign AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_empty_n = src_axi_V_dest_V_empty_n;
assign AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_id_V_dout = src_axi_V_id_V_dout;
assign AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_id_V_empty_n = src_axi_V_id_V_empty_n;
assign AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_dout = src_axi_V_keep_V_dout;
assign AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_empty_n = src_axi_V_keep_V_empty_n;
assign AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_last_V_dout = src_axi_V_last_V_dout;
assign AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_last_V_empty_n = src_axi_V_last_V_empty_n;
assign AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_dout = src_axi_V_strb_V_dout;
assign AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_empty_n = src_axi_V_strb_V_empty_n;
assign AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_user_V_dout = src_axi_V_user_V_dout;
assign AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_user_V_empty_n = src_axi_V_user_V_empty_n;
assign AXIvideo2Mat_16_1080_1920_8_U0_ap_continue = ap_const_logic_1;
assign AXIvideo2Mat_16_1080_1920_8_U0_ap_start = (src_rows_V_empty_n & src_cols_V_empty_n & ap_sig_start_in_AXIvideo2Mat_16_1080_1920_8_U0_ap_start);
assign AXIvideo2Mat_16_1080_1920_8_U0_img_cols_V_read = src_cols_V_dout;
assign AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_0_V_full_n = src_data_stream_0_V_full_n;
assign AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_1_V_full_n = src_data_stream_1_V_full_n;
assign AXIvideo2Mat_16_1080_1920_8_U0_img_rows_V_read = src_rows_V_dout;
assign Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_data_V_full_n = dst_axi_V_data_V_full_n;
assign Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_full_n = dst_axi_V_dest_V_full_n;
assign Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_id_V_full_n = dst_axi_V_id_V_full_n;
assign Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_full_n = dst_axi_V_keep_V_full_n;
assign Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_last_V_full_n = dst_axi_V_last_V_full_n;
assign Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_full_n = dst_axi_V_strb_V_full_n;
assign Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_user_V_full_n = dst_axi_V_user_V_full_n;
assign Mat2AXIvideo_16_1080_1920_8_U0_ap_continue = ap_sig_hs_continue;
assign Mat2AXIvideo_16_1080_1920_8_U0_ap_start = (dst_rows_V_empty_n & dst_cols_V_empty_n);
assign Mat2AXIvideo_16_1080_1920_8_U0_img_cols_V_read = dst_cols_V_dout;
assign Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_0_V_dout = dst_data_stream_0_V_dout;
assign Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_0_V_empty_n = dst_data_stream_0_V_empty_n;
assign Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_1_V_dout = dst_data_stream_1_V_dout;
assign Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_1_V_empty_n = dst_data_stream_1_V_empty_n;
assign Mat2AXIvideo_16_1080_1920_8_U0_img_rows_V_read = dst_rows_V_dout;
assign ap_done = ap_sig_hs_done;
assign ap_ready = ap_sig_top_allready;
assign ap_sig_hs_continue = ap_const_logic_1;
assign dst_axi_V_data_V_din = Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_data_V_din;
assign dst_axi_V_data_V_write = Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_data_V_write;
assign dst_axi_V_dest_V_din = Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_din;
assign dst_axi_V_dest_V_write = Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_write;
assign dst_axi_V_id_V_din = Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_id_V_din;
assign dst_axi_V_id_V_write = Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_id_V_write;
assign dst_axi_V_keep_V_din = Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_din;
assign dst_axi_V_keep_V_write = Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_write;
assign dst_axi_V_last_V_din = Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_last_V_din;
assign dst_axi_V_last_V_write = Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_last_V_write;
assign dst_axi_V_strb_V_din = Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_din;
assign dst_axi_V_strb_V_write = Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_write;
assign dst_axi_V_user_V_din = Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_user_V_din;
assign dst_axi_V_user_V_write = Mat2AXIvideo_16_1080_1920_8_U0_AXI_video_strm_V_user_V_write;
assign dst_cols_V_ap_dummy_ce = ap_const_logic_1;
assign dst_cols_V_din = init_1_U0_ap_return_1;
assign dst_cols_V_read = Mat2AXIvideo_16_1080_1920_8_U0_ap_ready;
assign dst_cols_V_write = ap_chn_write_init_1_U0_dst_cols_V;
assign dst_data_stream_0_V_ap_dummy_ce = ap_const_logic_1;
assign dst_data_stream_0_V_din = sobel_filter_core_U0_dst_data_stream_0_V_din;
assign dst_data_stream_0_V_read = Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_0_V_read;
assign dst_data_stream_0_V_write = sobel_filter_core_U0_dst_data_stream_0_V_write;
assign dst_data_stream_1_V_ap_dummy_ce = ap_const_logic_1;
assign dst_data_stream_1_V_din = sobel_filter_core_U0_dst_data_stream_1_V_din;
assign dst_data_stream_1_V_read = Mat2AXIvideo_16_1080_1920_8_U0_img_data_stream_1_V_read;
assign dst_data_stream_1_V_write = sobel_filter_core_U0_dst_data_stream_1_V_write;
assign dst_rows_V_ap_dummy_ce = ap_const_logic_1;
assign dst_rows_V_din = init_1_U0_ap_return_0;
assign dst_rows_V_read = Mat2AXIvideo_16_1080_1920_8_U0_ap_ready;
assign dst_rows_V_write = ap_chn_write_init_1_U0_dst_rows_V;
assign init_1_U0_ap_start = ap_sig_start_in_init_1_U0_ap_start;
assign init_1_U0_p_cols = cols;
assign init_1_U0_p_rows = rows;
assign init_U0_ap_start = ap_sig_start_in_init_U0_ap_start;
assign init_U0_p_cols = cols;
assign init_U0_p_rows = rows;
assign sobel_filter_core_U0_C_XR0C0 = C_XR0C0;
assign sobel_filter_core_U0_C_XR0C1 = C_XR0C1;
assign sobel_filter_core_U0_C_XR0C2 = C_XR0C2;
assign sobel_filter_core_U0_C_XR1C0 = C_XR1C0;
assign sobel_filter_core_U0_C_XR1C1 = C_XR1C1;
assign sobel_filter_core_U0_C_XR1C2 = C_XR1C2;
assign sobel_filter_core_U0_C_XR2C0 = C_XR2C0;
assign sobel_filter_core_U0_C_XR2C1 = C_XR2C1;
assign sobel_filter_core_U0_C_XR2C2 = C_XR2C2;
assign sobel_filter_core_U0_C_YR0C0 = C_YR0C0;
assign sobel_filter_core_U0_C_YR0C1 = C_YR0C1;
assign sobel_filter_core_U0_C_YR0C2 = C_YR0C2;
assign sobel_filter_core_U0_C_YR1C0 = C_YR1C0;
assign sobel_filter_core_U0_C_YR1C1 = C_YR1C1;
assign sobel_filter_core_U0_C_YR1C2 = C_YR1C2;
assign sobel_filter_core_U0_C_YR2C0 = C_YR2C0;
assign sobel_filter_core_U0_C_YR2C1 = C_YR2C1;
assign sobel_filter_core_U0_ap_continue = ap_const_logic_1;
assign sobel_filter_core_U0_ap_start = ap_sig_start_in_sobel_filter_core_U0_ap_start;
assign sobel_filter_core_U0_c_high_thesh = c_high_thesh;
assign sobel_filter_core_U0_c_invert = c_invert;
assign sobel_filter_core_U0_c_low_thresh = c_low_thresh;
assign sobel_filter_core_U0_cols = cols;
assign sobel_filter_core_U0_dst_data_stream_0_V_full_n = dst_data_stream_0_V_full_n;
assign sobel_filter_core_U0_dst_data_stream_1_V_full_n = dst_data_stream_1_V_full_n;
assign sobel_filter_core_U0_rows = rows;
assign sobel_filter_core_U0_src_data_stream_0_V_dout = src_data_stream_0_V_dout;
assign sobel_filter_core_U0_src_data_stream_0_V_empty_n = src_data_stream_0_V_empty_n;
assign sobel_filter_core_U0_src_data_stream_1_V_dout = src_data_stream_1_V_dout;
assign sobel_filter_core_U0_src_data_stream_1_V_empty_n = src_data_stream_1_V_empty_n;
assign src_axi_V_data_V_read = AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_data_V_read;
assign src_axi_V_dest_V_read = AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_dest_V_read;
assign src_axi_V_id_V_read = AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_id_V_read;
assign src_axi_V_keep_V_read = AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_keep_V_read;
assign src_axi_V_last_V_read = AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_last_V_read;
assign src_axi_V_strb_V_read = AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_strb_V_read;
assign src_axi_V_user_V_read = AXIvideo2Mat_16_1080_1920_8_U0_AXI_video_strm_V_user_V_read;
assign src_cols_V_ap_dummy_ce = ap_const_logic_1;
assign src_cols_V_din = init_U0_ap_return_1;
assign src_cols_V_read = AXIvideo2Mat_16_1080_1920_8_U0_ap_ready;
assign src_cols_V_write = ap_chn_write_init_U0_src_cols_V;
assign src_data_stream_0_V_ap_dummy_ce = ap_const_logic_1;
assign src_data_stream_0_V_din = AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_0_V_din;
assign src_data_stream_0_V_read = sobel_filter_core_U0_src_data_stream_0_V_read;
assign src_data_stream_0_V_write = AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_0_V_write;
assign src_data_stream_1_V_ap_dummy_ce = ap_const_logic_1;
assign src_data_stream_1_V_din = AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_1_V_din;
assign src_data_stream_1_V_read = sobel_filter_core_U0_src_data_stream_1_V_read;
assign src_data_stream_1_V_write = AXIvideo2Mat_16_1080_1920_8_U0_img_data_stream_1_V_write;
assign src_rows_V_ap_dummy_ce = ap_const_logic_1;
assign src_rows_V_din = init_U0_ap_return_0;
assign src_rows_V_read = AXIvideo2Mat_16_1080_1920_8_U0_ap_ready;
assign src_rows_V_write = ap_chn_write_init_U0_src_rows_V;


endmodule //sobel_filter

